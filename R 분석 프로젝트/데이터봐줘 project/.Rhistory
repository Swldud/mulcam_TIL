a$marriage_1[a$marriage ==0 |a$marriage == 5] <- 1 # 미혼
a$marriage_1[a$marriage ==1] <- 2 # 기혼
a$marriage_1[a$marriage ==2] <-3 # 사별
a$marriage_1[a$marriage ==3] <- 4 # 이혼
a$marriage_1[a$marriage ==4] <- 5 #  별거
a$marriage_1[a$marriage ==6] <- 6 # 기타
# religion
# 1 있음 2 없음 9는 없음으로
a$religion<- ifelse(a$religion==9 ,2, a$religion)
table(a$religion)
a$company_size <- ifelse(a$company_size==99 ,0, a$company_size)
a$company_size <- ifelse(a$company_size==0 ,0, a$company_size)
table(is.na(a$company_size))
a$reason_none_worker <- ifelse(a$reason_none_worker==0 |a$reason_none_worker==99,11,                                            a$reason_none_worker)
data <- a
data$gender_2[data$gender == 2] <- 0
data$gender_2[data$gender ==1 ]<-1
data$marriage_2[data$marriage == 2] <- 1
data$marriage_2[data$marriage == 1] <- 0
data$marriage_2[data$marriage == 3] <- 0
data$marriage_2[data$marriage == 4] <- 0
data$marriage_2[data$marriage == 5] <- 0
data$marriage_2[data$marriage == 6] <- 0
table(data$marriage_2)
data$religion_2[data$religion == 1] <- 1
data$religion_2[data$religion == 2] <- 0
data$job[substr(data$occupation,1,2) == 11] <- 11
data$job[substr(data$occupation,1,2) == 12] <- 12
data$job[substr(data$occupation,1,2) == 13] <- 13
data$job[substr(data$occupation,1,2) == 14] <- 14
data$job[substr(data$occupation,1,2) == 15] <- 15
data$job[substr(data$occupation,1,2) == 21] <- 21
data$job[substr(data$occupation,1,2) == 22] <- 22
data$job[substr(data$occupation,1,2) == 23] <- 23
data$job[substr(data$occupation,1,2) == 24] <- 24
data$job[substr(data$occupation,1,2) == 26] <- 26
data$job[substr(data$occupation,1,2) == 27] <- 27
data$job[substr(data$occupation,1,2) == 28] <- 28
data$job[substr(data$occupation,1,2) == 31] <- 31
data$job[substr(data$occupation,1,2) == 32] <- 32
data$job[substr(data$occupation,1,2) == 33] <- 33
data$job[substr(data$occupation,1,2) == 39] <- 39
data$job[substr(data$occupation,1,2) == 41] <- 41
data$job[substr(data$occupation,1,2) == 42] <- 42
data$job[substr(data$occupation,1,2) == 43] <- 43
data$job[substr(data$occupation,1,2) == 44] <- 44
data$job[substr(data$occupation,1,2) == 51] <- 51
data$job[substr(data$occupation,1,2) == 52] <- 52
data$job[substr(data$occupation,1,2) == 53] <- 53
data$job[substr(data$occupation,1,2) == 61] <- 61
data$job[substr(data$occupation,1,2) == 62] <- 62
data$job[substr(data$occupation,1,2) == 63] <- 63
data$job[substr(data$occupation,1,2) == 71] <- 71
data$job[substr(data$occupation,1,2) == 72] <- 72
data$job[substr(data$occupation,1,2) == 73] <- 73
data$job[substr(data$occupation,1,2) == 74] <- 74
data$job[substr(data$occupation,1,2) == 75] <- 75
data$job[substr(data$occupation,1,2) == 76] <- 76
data$job[substr(data$occupation,1,2) == 77] <- 77
data$job[substr(data$occupation,1,2) == 78] <- 78
data$job[substr(data$occupation,1,2) == 79] <- 79
data$job[substr(data$occupation,1,2) == 81] <- 81
data$job[substr(data$occupation,1,2) == 82] <- 82
data$job[substr(data$occupation,1,2) == 83] <- 83
data$job[substr(data$occupation,1,2) == 84] <- 84
data$job[substr(data$occupation,1,2) == 85] <- 85
data$job[substr(data$occupation,1,2) == 86] <- 86
data$job[substr(data$occupation,1,2) == 87] <- 87
data$job[substr(data$occupation,1,2) == 88] <- 88
data$job[substr(data$occupation,1,2) == 89] <- 89
data$job[substr(data$occupation,1,2) == 91] <- 91
data$job[substr(data$occupation,1,2) == 92] <- 92
data$job[substr(data$occupation,1,2) == 93] <- 93
data$job[substr(data$occupation,1,2) == 94] <- 94
data$job[substr(data$occupation,1,2) == 95] <- 95
data$job[substr(data$occupation,1,2) == 99] <- 99
data$job[substr(data$occupation,1,2) == "A0"] <- "A0"
#------------------------------
data$age[data$year - data$year_born +1 < 20]<- 1
data$age[data$year - data$year_born +1 >= 20 &
data$year - data$year_born +1 < 30]<- 2
data$age[data$year - data$year_born +1 >= 30 &
data$year - data$year_born +1 < 40]<- 3
data$age[data$year - data$year_born +1 >= 40 &
data$year - data$year_born +1 < 50]<- 4
data$age[data$year - data$year_born +1 >= 50 &
data$year - data$year_born +1 < 60]<- 5
data$age[data$year - data$year_born +1 >= 60 &
data$year - data$year_born +1 < 70]<- 6
data$age[data$year - data$year_born +1 >= 70 &
data$year - data$year_born +1 < 80]<- 7
data$age[data$year - data$year_born +1 >= 80 &
data$year - data$year_born +1 < 90]<- 8
data$age[data$year - data$year_born +1 >= 90 &
data$year - data$year_born +1 < 100]<- 9
table(data$age)
table(data$marriage)
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage_1[a$marriage ==0 |a$marriage == 5] <- 1 # 미혼
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage_1[a$marriage ==0 |a$marriage == 5] <- 1 # 미혼
a$marriage_1[a$marriage ==1] <- 2 # 기혼
a$marriage_1[a$marriage ==2] <-3 # 사별
a$marriage_1[a$marriage ==3] <- 4 # 이혼
a$marriage_1[a$marriage ==4] <- 5 #  별거
a$marriage_1[a$marriage ==6] <- 6 # 기타
table(a$marriage)
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage_1[a$marriage ==0 | a$marriage == 5] <- 1 # 미혼
table(a$marriage)
a <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/Korea Income and Welfare_clear.csv")
a$e_level[a$education_level == 1| a$education_level == 2] <- 1 # 무학
a$e_level[a$education_level == 3] <- 2 #"초등학교"
a$e_level[a$education_level == 4] <- 3 #"중학교"
a$e_level[a$education_level == 5] <- 4 #"고등학교"
a$e_level[a$education_level == 6 | a$education_level == 7] <- 5  #"대학교"
a$e_level[a$education_level == 8] <- 6  # "석사"
a$e_level[a$education_level == 9] <-7  # "박사"
a$education_level[a$education_level == 1| a$education_level == 2] <- 1 # 무학
a$education_level[a$education_level == 3] <- 2 #"초등학교"
a$education_level[a$education_level == 4] <- 3 #"중학교"
a$education_level[a$education_level == 5] <- 4 #"고등학교"
a$education_level[a$education_level == 6 | a$education_level == 7] <- 5  #"대학교"
a$education_level[a$education_level == 8] <- 6  # "석사"
a$education_level[a$education_level == 9] <-7  # "박사"
table(a$education_level)
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage[a$marriage ==0 | a$marriage == 5] <- 1 # 미혼
a$marriage[a$marriage ==1] <- 2 # 기혼
a$marriage[a$marriage ==2] <-3 # 사별
a$marriage[a$marriage ==3] <- 4 # 이혼
a$marriage[a$marriage ==4] <- 5 #  별거
a$marriage[a$marriage ==6] <- 6 # 기타
table(a$marriage)
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage[a$marriage ==0 | a$marriage == 5] <- 1 # 미혼
a$marriage[a$marriage ==1] <- 2 # 기혼
a <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/Korea Income and Welfare_clear.csv")
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage[a$marriage ==0 | a$marriage == 5] <- 1 # 미혼
table(a$marriage)
a$marriage[a$marriage ==1] <- 2 # 기혼
a$marriage[a$marriage ==2] <-3 # 사별
a$marriage[a$marriage ==3] <- 4 # 이혼
a$marriage[a$marriage ==4] <- 5 #  별거
a$marriage[a$marriage ==6] <- 6 # 기타
table(a$marriage)
table(a$education_level)
a <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/Korea Income and Welfare_clear.csv")
a$e_level[a$education_level == 1| a$education_level == 2] <- 1 # 무학
a$e_level[a$education_level == 3] <- 2 #"초등학교"
a$e_level[a$education_level == 4] <- 3 #"중학교"
a$e_level[a$education_level == 5] <- 4 #"고등학교"
a$e_level[a$education_level == 6 | a$education_level == 7] <- 5  #"대학교"
a$e_level[a$education_level == 8] <- 6  # "석사"
a$e_level[a$education_level == 9] <-7  # "박사"
table(a$e_level)
# mariage
#1) 해당 없음(18세 미만) 2) 기혼 3) 사망으로 별거 4) 별거 5) 미혼 6) 기타
a$marriage_1[a$marriage ==0 | a$marriage == 5] <- 1 # 미혼
a$marriage_1[a$marriage ==1] <- 2 # 기혼
a$marriage_1[a$marriage ==2] <-3 # 사별
a$marriage_1[a$marriage ==3] <- 4 # 이혼
a$marriage_1[a$marriage ==4] <- 5 #  별거
a$marriage_1[a$marriage ==6] <- 6 # 기타
table(a$marriage_1)
table(a$marriage_1)
# religion
# 1 있음 2 없음 9는 없음으로
a$religion<- ifelse(a$religion==9 ,2, a$religion)
table(a$religion)
#99 해당사항 없음 => 결측치 처리
a$company_size <- ifelse(a$company_size==99 ,0, a$company_size)
a$company_size <- ifelse(a$company_size==0 ,0, a$company_size)
table(is.na(a$company_size))
table(a$company_size)
# 0 과 99 기타로
a$reason_none_worker <- ifelse(a$reason_none_worker==0 |a$reason_none_worker==99,11,                                            a$reason_none_worker)
table(a$reason_none_worker)
data <- a
View(data)
#-----------------------------------------
data$gender_2[data$gender == 2] <- 0
data$gender_2[data$gender ==1 ]<-1
data$marriage_2[data$marriage == 2] <- 1
data$marriage_2[data$marriage == 1] <- 0
data$marriage_2[data$marriage == 3] <- 0
data$marriage_2[data$marriage == 4] <- 0
data$marriage_2[data$marriage == 5] <- 0
data$marriage_2[data$marriage == 6] <- 0
table(data$marriage_2)
data$religion_2[data$religion == 1] <- 1
data$religion_2[data$religion == 2] <- 0
#-------------------------------
data$job[substr(data$occupation,1,2) == 11] <- 11
data$job[substr(data$occupation,1,2) == 12] <- 12
data$job[substr(data$occupation,1,2) == 13] <- 13
data$job[substr(data$occupation,1,2) == 14] <- 14
data$job[substr(data$occupation,1,2) == 15] <- 15
data$job[substr(data$occupation,1,2) == 21] <- 21
data$job[substr(data$occupation,1,2) == 22] <- 22
data$job[substr(data$occupation,1,2) == 23] <- 23
data$job[substr(data$occupation,1,2) == 24] <- 24
data$job[substr(data$occupation,1,2) == 26] <- 26
data$job[substr(data$occupation,1,2) == 27] <- 27
data$job[substr(data$occupation,1,2) == 28] <- 28
data$job[substr(data$occupation,1,2) == 31] <- 31
data$job[substr(data$occupation,1,2) == 32] <- 32
data$job[substr(data$occupation,1,2) == 33] <- 33
data$job[substr(data$occupation,1,2) == 39] <- 39
data$job[substr(data$occupation,1,2) == 41] <- 41
data$job[substr(data$occupation,1,2) == 42] <- 42
data$job[substr(data$occupation,1,2) == 43] <- 43
data$job[substr(data$occupation,1,2) == 44] <- 44
data$job[substr(data$occupation,1,2) == 51] <- 51
data$job[substr(data$occupation,1,2) == 52] <- 52
data$job[substr(data$occupation,1,2) == 53] <- 53
data$job[substr(data$occupation,1,2) == 61] <- 61
data$job[substr(data$occupation,1,2) == 62] <- 62
data$job[substr(data$occupation,1,2) == 63] <- 63
data$job[substr(data$occupation,1,2) == 71] <- 71
data$job[substr(data$occupation,1,2) == 72] <- 72
data$job[substr(data$occupation,1,2) == 73] <- 73
data$job[substr(data$occupation,1,2) == 74] <- 74
data$job[substr(data$occupation,1,2) == 75] <- 75
data$job[substr(data$occupation,1,2) == 76] <- 76
data$job[substr(data$occupation,1,2) == 77] <- 77
data$job[substr(data$occupation,1,2) == 78] <- 78
data$job[substr(data$occupation,1,2) == 79] <- 79
data$job[substr(data$occupation,1,2) == 81] <- 81
data$job[substr(data$occupation,1,2) == 82] <- 82
data$job[substr(data$occupation,1,2) == 83] <- 83
data$job[substr(data$occupation,1,2) == 84] <- 84
data$job[substr(data$occupation,1,2) == 85] <- 85
data$job[substr(data$occupation,1,2) == 86] <- 86
data$job[substr(data$occupation,1,2) == 87] <- 87
data$job[substr(data$occupation,1,2) == 88] <- 88
data$job[substr(data$occupation,1,2) == 89] <- 89
data$job[substr(data$occupation,1,2) == 91] <- 91
data$job[substr(data$occupation,1,2) == 92] <- 92
data$job[substr(data$occupation,1,2) == 93] <- 93
data$job[substr(data$occupation,1,2) == 94] <- 94
data$job[substr(data$occupation,1,2) == 95] <- 95
data$job[substr(data$occupation,1,2) == 99] <- 99
data$job[substr(data$occupation,1,2) == "A0"] <- "A0"
data$age[data$year - data$year_born +1 < 20]<- 1
data$age[data$year - data$year_born +1 >= 20 &
data$year - data$year_born +1 < 30]<- 2
data$age[data$year - data$year_born +1 >= 30 &
data$year - data$year_born +1 < 40]<- 3
data$age[data$year - data$year_born +1 >= 40 &
data$year - data$year_born +1 < 50]<- 4
data$age[data$year - data$year_born +1 >= 50 &
data$year - data$year_born +1 < 60]<- 5
data$age[data$year - data$year_born +1 >= 60 &
data$year - data$year_born +1 < 70]<- 6
data$age[data$year - data$year_born +1 >= 70 &
data$year - data$year_born +1 < 80]<- 7
data$age[data$year - data$year_born +1 >= 80 &
data$year - data$year_born +1 < 90]<- 8
data$age[data$year - data$year_born +1 >= 90 &
data$year - data$year_born +1 < 100]<- 9
table(data$age)
table(data$marriage)
write.csv(data, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/dataset_final_F.csv", row.names = F)
table(a$reason_none_worker)
data <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/dataset_final_F.csv")
table(data$marriage)
multi <-lm(quantile_group ~region + family_member+ gender+year_born+education_level+marriage+religion+company_size, data = data)
summary(multi)
multi1 <-lm(quantile_group~ family_member+ gender_2+age+education_level+marriage_2+religion_2+company_size, data = data)
data$gender_2[data$gender == 2] <- 0
data$gender_2[data$gender ==1 ]<-1
data$marriage_2[data$marriage == 2] <- 1
data$marriage_2[data$marriage == 1] <- 0
data$marriage_2[data$marriage == 3] <- 0
data$marriage_2[data$marriage == 4] <- 0
data$marriage_2[data$marriage == 5] <- 0
data$marriage_2[data$marriage == 6] <- 0
table(data$marriage_2)
data$religion_2[data$religion == 1] <- 1
data$religion_2[data$religion == 2] <- 0
#-------------------------------
data$job[substr(data$occupation,1,2) == 11] <- 11
data$job[substr(data$occupation,1,2) == 12] <- 12
data$job[substr(data$occupation,1,2) == 13] <- 13
data$job[substr(data$occupation,1,2) == 14] <- 14
data$job[substr(data$occupation,1,2) == 15] <- 15
data$job[substr(data$occupation,1,2) == 21] <- 21
data$job[substr(data$occupation,1,2) == 22] <- 22
data$job[substr(data$occupation,1,2) == 23] <- 23
data$job[substr(data$occupation,1,2) == 24] <- 24
data$job[substr(data$occupation,1,2) == 26] <- 26
data$job[substr(data$occupation,1,2) == 27] <- 27
data$job[substr(data$occupation,1,2) == 28] <- 28
data$job[substr(data$occupation,1,2) == 31] <- 31
data$job[substr(data$occupation,1,2) == 32] <- 32
data$job[substr(data$occupation,1,2) == 33] <- 33
data$job[substr(data$occupation,1,2) == 39] <- 39
data$job[substr(data$occupation,1,2) == 41] <- 41
data$job[substr(data$occupation,1,2) == 42] <- 42
data$job[substr(data$occupation,1,2) == 43] <- 43
data$job[substr(data$occupation,1,2) == 44] <- 44
data$job[substr(data$occupation,1,2) == 51] <- 51
data$job[substr(data$occupation,1,2) == 52] <- 52
data$job[substr(data$occupation,1,2) == 53] <- 53
data$job[substr(data$occupation,1,2) == 61] <- 61
data$job[substr(data$occupation,1,2) == 62] <- 62
data$job[substr(data$occupation,1,2) == 63] <- 63
data$job[substr(data$occupation,1,2) == 71] <- 71
data$job[substr(data$occupation,1,2) == 72] <- 72
data$job[substr(data$occupation,1,2) == 73] <- 73
data$job[substr(data$occupation,1,2) == 74] <- 74
data$job[substr(data$occupation,1,2) == 75] <- 75
data$job[substr(data$occupation,1,2) == 76] <- 76
data$job[substr(data$occupation,1,2) == 77] <- 77
data$job[substr(data$occupation,1,2) == 78] <- 78
data$job[substr(data$occupation,1,2) == 79] <- 79
data$job[substr(data$occupation,1,2) == 81] <- 81
data$job[substr(data$occupation,1,2) == 82] <- 82
data$job[substr(data$occupation,1,2) == 83] <- 83
data$job[substr(data$occupation,1,2) == 84] <- 84
data$job[substr(data$occupation,1,2) == 85] <- 85
data$job[substr(data$occupation,1,2) == 86] <- 86
data$job[substr(data$occupation,1,2) == 87] <- 87
data$job[substr(data$occupation,1,2) == 88] <- 88
data$job[substr(data$occupation,1,2) == 89] <- 89
data$job[substr(data$occupation,1,2) == 91] <- 91
data$job[substr(data$occupation,1,2) == 92] <- 92
data$job[substr(data$occupation,1,2) == 93] <- 93
data$job[substr(data$occupation,1,2) == 94] <- 94
data$job[substr(data$occupation,1,2) == 95] <- 95
data$job[substr(data$occupation,1,2) == 99] <- 99
data$job[substr(data$occupation,1,2) == "A0"] <- "A0"
#------------------------------
data$age[data$year - data$year_born +1 < 20]<- 1
data$age[data$year - data$year_born +1 >= 20 &
data$year - data$year_born +1 < 30]<- 2
data$age[data$year - data$year_born +1 >= 30 &
data$year - data$year_born +1 < 40]<- 3
data$age[data$year - data$year_born +1 >= 40 &
data$year - data$year_born +1 < 50]<- 4
data$age[data$year - data$year_born +1 >= 50 &
data$year - data$year_born +1 < 60]<- 5
data$age[data$year - data$year_born +1 >= 60 &
data$year - data$year_born +1 < 70]<- 6
data$age[data$year - data$year_born +1 >= 70 &
data$year - data$year_born +1 < 80]<- 7
data$age[data$year - data$year_born +1 >= 80 &
data$year - data$year_born +1 < 90]<- 8
data$age[data$year - data$year_born +1 >= 90 &
data$year - data$year_born +1 < 100]<- 9
table(data$age)
multi <-lm(quantile_group ~region + family_member+ gender+year_born+education_level+marriage+religion+company_size, data = data)
summary(multi)
multi1 <-lm(quantile_group~ family_member+ gender_2+age+education_level+marriage_2+religion_2+company_size, data = data)
summary(multi1)
multi1_1 <-lm(quantile_group~ family_member+age+education_level+marriage_2+religion_2+company_size, data = data)
summary(multi1_1)
#### F1 Score
# 필요한 패키지 설치
library(caret)
# 데이터 불러오기
train_data <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/dataset_final_F.csv")  # 훈련 데이터셋
test_data <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset.csv")  # 테스트 데이터셋
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker",
"quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker")
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~ year + family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
test_dataset <- sample(rownames(dataset), size=1000) # 1000개의 데이터 추출
test_dataset <- sample(rownames(train_data ), size=1000) # 1000개의 데이터 추출
test_dataset <- dataset[test_dataset,]
test_dataset <- train_data [test_dataset,]
test_dataset
write.csv(test_dataset, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset_F.csv", row.names = F)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~ year + family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~ year + family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
test_dataset <- sample(rownames(train_data ), size=1000) # 1000개의 데이터 추출
test_dataset <- train_data [test_dataset,]
test_dataset
write.csv(test_dataset, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset_F.csv", row.names = F)
write.csv(test_dataset, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset_F.csv", row.names = F)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~ year + family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_data)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker", "quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
View(train_data)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker", "quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
test_dataset <- sample(rownames(train_data), size=1000) # 1000개의 데이터 추출
View(test_data)
test_dataset <- sample_n(train_data, size=1000) # 1000개의 데이터 추출
View(test_data)
View(test_dataset)
test_dataset <- train_data[test_dataset,]
test_dataset <- train_data[test_dataset,]
test_dataset <- sample(rownames(train_data), size=1000) # 1000개의 데이터 추출
test_dataset <- sample(rownames(train_data), size=1000) # 1000개의 데이터 추출
test_dataset
write.csv(test_dataset, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset_F.csv", row.names = F)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker", "quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
train_data <- read.csv("C:/Users/simjiyoung/mulcam/R_TEMP/project material/dataset_final_F.csv")  # 훈련 데이터셋
test_dataset <- sample(rownames(train_data), size=1000) # 1000개의 데이터 추출
test_dataset
write.csv(test_dataset, "C:/Users/simjiyoung/mulcam/R_TEMP/project material/test_dataset_F.csv", row.names = F)
# 범주형 변수 목록
factor_vars <- c("id", "region", "gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker", "quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_data[factor_vars] <- lapply(test_data[factor_vars], as.factor)
test_dataset[factor_vars] <- lapply(test_data[factor_vars], as.factor)
test_dataset[factor_vars] <- lapply(test_dataset[factor_vars], as.factor)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~ year + family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_dataset)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_dataset)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~family_member + year_born +
education_level + marriage + religion + occupation +
company_size + reason_none_worker, data = train_data)
# 범주형 변수 목록
factor_vars <- c("gender", "education_level", "marriage",
"religion", "occupation", "company_size", "reason_none_worker", "quantile_group")
# 범주형 변수 변환
train_data[factor_vars] <- lapply(train_data[factor_vars], as.factor)
test_dataset[factor_vars] <- lapply(test_dataset[factor_vars], as.factor)
# 회귀분석 모델 훈련
model <- lm(quantile_group ~gender +education_level+marriage+ religion+ occupation+ company_size + reason_none_worker + quantile_group, data = train_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_dataset)
class(predictions)
predictions <- as.integer(predictions)
predictions
View(test_data)
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_dataset)
class(predictions)
predictions <- as.integer(predictions)
predictions
# 테스트 데이터셋 예측
predictions <- predict(model, newdata = test_dataset)
